{
    "check_type": "dockerfile",
    "results": {
        "passed_checks": [
            {
                "check_id": "CKV_DOCKER_1",
                "bc_check_id": "BC_DKR_1",
                "check_name": "Ensure port 22 is not exposed",
                "check_result": {
                    "result": "PASSED",
                    "results_configuration": null
                },
                "code_block": [
                    [
                        1,
                        "FROM node:12-alpine\n"
                    ],
                    [
                        2,
                        "ENV WORKDIR /usr/src/app/\n"
                    ],
                    [
                        3,
                        "WORKDIR $WORKDIR\n"
                    ],
                    [
                        4,
                        "COPY package*.json $WORKDIR\n"
                    ],
                    [
                        5,
                        "RUN npm install --production --no-cache\n"
                    ],
                    [
                        6,
                        "\n"
                    ],
                    [
                        7,
                        "FROM node:12-alpine\n"
                    ],
                    [
                        8,
                        "ENV USER node\n"
                    ],
                    [
                        9,
                        "ENV WORKDIR /home/$USER/app\n"
                    ],
                    [
                        10,
                        "WORKDIR $WORKDIR\n"
                    ],
                    [
                        11,
                        "COPY --from=0 /usr/src/app/node_modules node_modules\n"
                    ],
                    [
                        12,
                        "RUN chown $USER:$USER $WORKDIR\n"
                    ],
                    [
                        13,
                        "COPY --chown=node . $WORKDIR\n"
                    ],
                    [
                        14,
                        "# In production environment uncomment the next line\n"
                    ],
                    [
                        15,
                        "#RUN chown -R $USER:$USER /home/$USER && chmod -R g-s,o-rx /home/$USER && chmod -R o-wrx $WORKDIR\n"
                    ],
                    [
                        16,
                        "# Then all further actions including running the containers should be done under non-root user.\n"
                    ],
                    [
                        17,
                        "USER $USER\n"
                    ],
                    [
                        18,
                        "EXPOSE 4000\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/NodeGoat/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    1,
                    18
                ],
                "resource": "/Dockerfile.",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.ExposePort22",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-port-22-is-not-exposed"
            },
            {
                "check_id": "CKV_DOCKER_7",
                "bc_check_id": "BC_DKR_7",
                "check_name": "Ensure the base image uses a non latest version tag",
                "check_result": {
                    "result": "PASSED",
                    "results_configuration": null
                },
                "code_block": [
                    [
                        1,
                        "FROM node:12-alpine\n"
                    ],
                    [
                        2,
                        "ENV WORKDIR /usr/src/app/\n"
                    ],
                    [
                        3,
                        "WORKDIR $WORKDIR\n"
                    ],
                    [
                        4,
                        "COPY package*.json $WORKDIR\n"
                    ],
                    [
                        5,
                        "RUN npm install --production --no-cache\n"
                    ],
                    [
                        6,
                        "\n"
                    ],
                    [
                        7,
                        "FROM node:12-alpine\n"
                    ],
                    [
                        8,
                        "ENV USER node\n"
                    ],
                    [
                        9,
                        "ENV WORKDIR /home/$USER/app\n"
                    ],
                    [
                        10,
                        "WORKDIR $WORKDIR\n"
                    ],
                    [
                        11,
                        "COPY --from=0 /usr/src/app/node_modules node_modules\n"
                    ],
                    [
                        12,
                        "RUN chown $USER:$USER $WORKDIR\n"
                    ],
                    [
                        13,
                        "COPY --chown=node . $WORKDIR\n"
                    ],
                    [
                        14,
                        "# In production environment uncomment the next line\n"
                    ],
                    [
                        15,
                        "#RUN chown -R $USER:$USER /home/$USER && chmod -R g-s,o-rx /home/$USER && chmod -R o-wrx $WORKDIR\n"
                    ],
                    [
                        16,
                        "# Then all further actions including running the containers should be done under non-root user.\n"
                    ],
                    [
                        17,
                        "USER $USER\n"
                    ],
                    [
                        18,
                        "EXPOSE 4000\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/NodeGoat/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    1,
                    18
                ],
                "resource": "/Dockerfile.",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.ReferenceLatestTag",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-the-base-image-uses-a-non-latest-version-tag"
            },
            {
                "check_id": "CKV_DOCKER_8",
                "bc_check_id": "BC_DKR_8",
                "check_name": "Ensure the last USER is not root",
                "check_result": {
                    "result": "PASSED",
                    "results_configuration": {
                        "instruction": "USER",
                        "startline": 16,
                        "endline": 16,
                        "content": "USER $USER\n",
                        "value": "$USER"
                    }
                },
                "code_block": [
                    [
                        17,
                        "USER $USER\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/NodeGoat/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    17,
                    17
                ],
                "resource": "/Dockerfile.USER",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.RootUser",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-the-last-user-is-not-root"
            },
            {
                "check_id": "CKV_DOCKER_5",
                "bc_check_id": "BC_DKR_4",
                "check_name": "Ensure update instructions are not use alone in the Dockerfile",
                "check_result": {
                    "result": "PASSED",
                    "results_configuration": null
                },
                "code_block": [
                    [
                        1,
                        "FROM node:12-alpine\n"
                    ],
                    [
                        2,
                        "ENV WORKDIR /usr/src/app/\n"
                    ],
                    [
                        3,
                        "WORKDIR $WORKDIR\n"
                    ],
                    [
                        4,
                        "COPY package*.json $WORKDIR\n"
                    ],
                    [
                        5,
                        "RUN npm install --production --no-cache\n"
                    ],
                    [
                        6,
                        "\n"
                    ],
                    [
                        7,
                        "FROM node:12-alpine\n"
                    ],
                    [
                        8,
                        "ENV USER node\n"
                    ],
                    [
                        9,
                        "ENV WORKDIR /home/$USER/app\n"
                    ],
                    [
                        10,
                        "WORKDIR $WORKDIR\n"
                    ],
                    [
                        11,
                        "COPY --from=0 /usr/src/app/node_modules node_modules\n"
                    ],
                    [
                        12,
                        "RUN chown $USER:$USER $WORKDIR\n"
                    ],
                    [
                        13,
                        "COPY --chown=node . $WORKDIR\n"
                    ],
                    [
                        14,
                        "# In production environment uncomment the next line\n"
                    ],
                    [
                        15,
                        "#RUN chown -R $USER:$USER /home/$USER && chmod -R g-s,o-rx /home/$USER && chmod -R o-wrx $WORKDIR\n"
                    ],
                    [
                        16,
                        "# Then all further actions including running the containers should be done under non-root user.\n"
                    ],
                    [
                        17,
                        "USER $USER\n"
                    ],
                    [
                        18,
                        "EXPOSE 4000\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/NodeGoat/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    1,
                    18
                ],
                "resource": "/Dockerfile.",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.UpdateNotAlone",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-update-instructions-are-not-used-alone-in-the-dockerfile"
            },
            {
                "check_id": "CKV_DOCKER_3",
                "bc_check_id": "BC_DKR_3",
                "check_name": "Ensure that a user for the container has been created",
                "check_result": {
                    "result": "PASSED",
                    "results_configuration": {
                        "instruction": "USER",
                        "startline": 16,
                        "endline": 16,
                        "content": "USER $USER\n",
                        "value": "$USER"
                    }
                },
                "code_block": [
                    [
                        17,
                        "USER $USER\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/NodeGoat/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    17,
                    17
                ],
                "resource": "/Dockerfile.USER",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.UserExists",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-a-user-for-the-container-has-been-created"
            }
        ],
        "failed_checks": [
            {
                "check_id": "CKV_DOCKER_2",
                "bc_check_id": "BC_DKR_2",
                "check_name": "Ensure that HEALTHCHECK instructions have been added to container images",
                "check_result": {
                    "result": "FAILED",
                    "results_configuration": null
                },
                "code_block": [
                    [
                        1,
                        "FROM node:12-alpine\n"
                    ],
                    [
                        2,
                        "ENV WORKDIR /usr/src/app/\n"
                    ],
                    [
                        3,
                        "WORKDIR $WORKDIR\n"
                    ],
                    [
                        4,
                        "COPY package*.json $WORKDIR\n"
                    ],
                    [
                        5,
                        "RUN npm install --production --no-cache\n"
                    ],
                    [
                        6,
                        "\n"
                    ],
                    [
                        7,
                        "FROM node:12-alpine\n"
                    ],
                    [
                        8,
                        "ENV USER node\n"
                    ],
                    [
                        9,
                        "ENV WORKDIR /home/$USER/app\n"
                    ],
                    [
                        10,
                        "WORKDIR $WORKDIR\n"
                    ],
                    [
                        11,
                        "COPY --from=0 /usr/src/app/node_modules node_modules\n"
                    ],
                    [
                        12,
                        "RUN chown $USER:$USER $WORKDIR\n"
                    ],
                    [
                        13,
                        "COPY --chown=node . $WORKDIR\n"
                    ],
                    [
                        14,
                        "# In production environment uncomment the next line\n"
                    ],
                    [
                        15,
                        "#RUN chown -R $USER:$USER /home/$USER && chmod -R g-s,o-rx /home/$USER && chmod -R o-wrx $WORKDIR\n"
                    ],
                    [
                        16,
                        "# Then all further actions including running the containers should be done under non-root user.\n"
                    ],
                    [
                        17,
                        "USER $USER\n"
                    ],
                    [
                        18,
                        "EXPOSE 4000\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/NodeGoat/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    1,
                    18
                ],
                "resource": "/Dockerfile.",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.HealthcheckExists",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-healthcheck-instructions-have-been-added-to-container-images"
            }
        ],
        "skipped_checks": [],
        "parsing_errors": []
    },
    "summary": {
        "passed": 5,
        "failed": 1,
        "skipped": 0,
        "parsing_errors": 0,
        "resource_count": 1,
        "checkov_version": "2.0.707"
    },
    "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
}
